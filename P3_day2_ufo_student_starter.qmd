---
title: "Untitled"
format: html
---


```{python}
#import sys
#!{sys.executable} -m pip install requests
# %%
# The usuals
import pandas as pd
import numpy as np
from lets_plot import *

LetsPlot.setup_html(isolated_frame=True)
```

```{python}
# %%
# UFO Sightings
url = "https://byuistats.github.io/DS250-Course/Skill%20Builders/json_missing.json"
df = pd.read_json(url)
df
```

We'll be loosely following the skill builder.
Let's start by getting to know our data and any cleaning needed.
Collapse

```{python}
df.shape_reported = df.shape_reported.replace(np.nan, "missing")
df.distance_reported = df.distance_reported.replace(-999, np.nan)
df.distance_reported = df.distance_reported.replace(np.nan, df.distance_reported.mean())

```




```{python}
df2 = df.assign(distance_reported2 = lambda x: x.distance_reported / 1000,
                 # distance_reported = df.distance_reported / 1000
                new_size = np.where(df.estimated.size > 10000,
                                    df.estimated_size / 144,
                                    df.estimated_size)

)

df['new _size'] = np.where(df.city.isin(['Holyoke', 'Crater Lake', 'Los Angeles', 'San Diego', 'Dallas']), 
        df.estimated_size / 144, df.estimated_size) # alternative way to do it
```

create a table that contains some summary stats: mean and median of size for each shape. 


```{python}
df_spence = (
df2.groupby('shape_reported')
     .aggregate(med_size = ('new_size','median')),
                mean_size = ('new_size', 'mean'),
                how_many = ('shape_reported', 'size')
    .reset_index()
)
```

lets plot the mean size by the shape


```{python}
ggplot(data = df_spence.sort_values('mean_size', ascending = False)) +
ggplot(data = df_spence) + geom_bar(aes(x = 'shape_reported', y = 'mena_size'), stat = 'identity')
```


```{python}
mycategories = ['CIGAR', 'CIRCLE', 'CYLINDER', 'DISK', 'OVAL', 'RECTABGLE', 'SPERE', 'TRIANGLE', 'FIREBALL', 'FORMATION', 'LIGHT', 'OTHER', 'MISSING']
df_spence['shape_cat'] = pd.Categorical(df_spence['shape_reported'], categories = mycategories, ordered = True)
```


```{python}
ggplot(data = df_spence) + geom_bar(aes(x = 'shape_cat', y = 'mean_size'), stat = 'identity')
```

lets try melting the data into longer format


```{python}
pd.melt(df_spence, id_vaars = ['shape_reported', 'how_many', 'shape_cat'], var_name = 'source', value_name = 'size')
```